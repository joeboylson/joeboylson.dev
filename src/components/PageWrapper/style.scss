@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@100;300;500;600&family=Roboto:wght@300;500;700&display=swap');
@import '~/locomotive-scroll/dist/locomotive-scroll.min.css';
@import './variables.scss';

@font-face {
    font-family: 'Migra';
    src: url('font/Migra-Extralight.eot');
    src: url('font/Migra-Extralight.eot?#iefix') format('embedded-opentype'),
        url('font/Migra-Extralight.woff2') format('woff2'),
        url('font/Migra-Extralight.woff') format('woff'),
        url('font/Migra-Extralight.ttf') format('truetype'),
        url('font/Migra-Extralight.svg#Migra-Extralight') format('svg');
    font-weight: 200;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Migra';
    src: url('font/Migra-Extrabold.eot');
    src: url('font/Migra-Extrabold.eot?#iefix') format('embedded-opentype'),
        url('font/Migra-Extrabold.woff2') format('woff2'),
        url('font/Migra-Extrabold.woff') format('woff'),
        url('font/Migra-Extrabold.ttf') format('truetype'),
        url('font/Migra-Extrabold.svg#Migra-Extrabold') format('svg');
    font-weight: 800;
    font-style: normal;
    font-display: swap;
}



// --------------------------------------------------------------------------------

@function strip-unit($number) {
    @if type-of($number)=='number'and not unitless($number) {
        @return $number / ($number * 0 + 1);
    }

    @return $number;
}

@function convert($value, $currentUnit, $convertUnit) {
    @if $currentUnit==px {

        @if $convertUnit==ems {
            @return $value / 16+0em;
        }

        @else if $convertUnit==percent {
            @return percentage($value / 16);
        }

    }

    @else if $currentUnit==ems {

        @if $convertUnit==px {
            @return $value * 16+0px;
        }

        @else if $convertUnit==percent {
            @return percentage($value);
        }

    }

    @else if $currentUnit==percent {

        @if $convertUnit==px {
            @return $value * 16 / 100+0px;
        }

        @else if $convertUnit==ems {
            @return $value / 100+0em;
        }

    }

    @else if $currentUnit==pts {

        @if $convertUnit==px {
            @return $value * 1.3333+0px;
        }

        @else if $convertUnit==ems {
            @return $value / 12+0em;
        }

        @else if $convertUnit==percent {
            @return percentage($value / 12)
        }
    }
}


* {
    margin: 0;
    padding: 0;
    color: $foreground;
    overscroll-behavior: none;
    text-decoration: none;

    // default font style
    font-family: 'Roboto', sans-serif;
    font-size: 24px;
    line-height: 30px;
    color: $foreground;
    // font-weight: 200;

    cursor: crosshair !important;

    &::selection {
        background-color: $foreground-accent;
        color: #ffeb7b;
    }
}

::-webkit-scrollbar {
    display: none;
}

body {
    background-color: $background;
    height: 100vh;
    overflow: hidden;
}

h1 {
    font-family: Migra;
    font-size: 96px;
    line-height: 106px;
    font-weight: 800;
    letter-spacing: 0.5px;
}

h2 {
    font-family: Migra;
    font-size: 72px;
    line-height: 80px;
    font-weight: 800;
    letter-spacing: 0.5px;
}

h3 {
    font-family: Migra;
    font-size: 48px;
    line-height: 54px;
    font-weight: 800;
    letter-spacing: 0.5px;
}

h3 b,
p b {
    font-weight: 600;
}

p,
a,
span {
    display: block
}

a {
    color: $foreground-accent;
}

img {
    width: 100%;
}

button {
    background-color: transparent;
    border: 0;
    outline: 0;
}

.emph {
    font-family: Migra;
}

.bold {
    font-weight: 800;
}

.small {
    font-size: 16px;
}

.mono {
    font-family: 'Roboto Mono', monospace;
}

@media screen and (max-width: $size-tablet) {
    #___gatsby {
        padding: 24px;
    }
}

@media screen and (max-width: $size-mobile) {
    #___gatsby {
        padding: 8px;
    }
}


// 

.column-gap24 {
    display: flex;
    flex-direction: column;
    gap: 24px;
}